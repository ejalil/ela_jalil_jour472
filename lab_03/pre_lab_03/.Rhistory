help.start()
options(repos = "https://cloud.r-project.org")
install.packages("tidyverse")
install.packages("rio")
install.packages("janitor")
install.packages("rio")
library(tidyverse)
library(rio)
library(janitor)
View(MediaBucks)
MediaBucks <- rio::import("https://docs.google.com/spreadsheets/d/1jkbQFwIdaWv8K00Ad6Wq7ZxFTUPFQA-g/edit#gid=1655992481", which = "RealMediaSalaries2")
View(MediaBucks)
nrow(MediaBucks)
ncol(MediaBucks)
dim(MediaBucks)
colnames(MediaBucks)
names(MediaBucks)
str(MediaBucks)
head(MediaBucks)
summary(MediaBucks$Salary)
sum(MediaBucks$Salary, na.rm=TRUE)
mean(MediaBucks$Salary, na.rm=TRUE)
quantile(MediaBucks$Salary, c(0.1, 0.2, 0.3, 0.4,0.5, 0.6, 0.7, 0.8, 0.9), na.rm=TRUE)
quantile(MediaBucks$Salary, c(0.25, 0.50, 0.75, 0.9, 0.99), na.rm=TRUE)
MediaBucks %>%
select(Gender, Salary) %>%
group_by(Gender) %>%
summarize(Total = sum(Salary, na.rm=TRUE))
MediaBucks %>%
count(Gender) %>%
arrange(desc(n))
MediaBucks %>%
select(Gender, Salary) %>%
group_by(Gender) %>%
summarize(Avg_Salary = mean(Salary, na.rm=TRUE))
MediaSalary <- MediaBucks %>%
filter(Salary >= 1000)
MediaBucks %>%
select(COMPANY, Salary) %>%
slice_max(Salary, n = 10)
#1. summary(mediaBucks)
#1
summary(mediaBucks)
#1
summary(MediaBucks)
#1
summary(MediaBucks$Salary)
#1
summary(MediaBucks$Salary)
#2
nroww(MediaBucks)
#1
summary(MediaBucks$Salary)
#2
nrow(MediaBucks)
#1
summary(MediaBucks$Salary)
#2
nrow(MediaBucks)
#3
nrow(MediaSalary)
WSJ <- subset(MediaBucks, COMPANY=="WallStreetJournal")
summary(WSJ$Salary)
Journal <- subset(MediaBucks, grepl("?Journal", COMPANY))
Bloom <- subset(MediaBucks, grepl("?Bloomberg", COMPANY))
BigBoys <- filter(MediaSalary, COMPANY %in% c("NewYorkTimes", "WallStreetJournal", "Bloomberg"))
Reporters <- subset(MediaBucks, grepl("?reporter", TITLE))
summary(Reporters$Salary)
View(BigBoys)
View(MediaSalary)
View(Reporters)
#1 Senior Reporter at Pro Publica
view(Reporters)
#2
Editors <- subset(MediaBucks, grepl("?"))
#1 Senior Reporter at Pro Publica
view(Reporters)
Reporters %>%
arrange(desc(Salary))
#2
Editors <- subset(MediaBucks, grepl("?"))
#1 Senior Reporter at Pro Publica
view(Reporters)
Reporters %>%
arrange(asc(Salary))
#1 Senior Reporter at Pro Publica
view(Reporters)
Reporters %>%
order(Salary)
#1 Senior Reporter at Pro Publica
view(Reporters)
Reporters %>%
arrange(desc(Salary))
#2
Editors <- subset(MediaBucks, grepl("?"))
#1 Senior Reporter at Pro Publica
view(Reporters)
Reporters %>%
arrange(desc(Salary))
#2
Editors <- subset(MediaBucks, grepl("?"))
#1 Senior Reporter at Pro Publica
view(Reporters)
Reporters %>%
#2
Editors <- subset(MediaBucks, grepl("?"))
help()
#1 Senior Reporter at Pro Publica
view(Reporters)
Reporters %>%
desc(Salary)
#1 Senior Reporter at Pro Publica
view(Reporters)
view(Salary)
View(MediaSalary)
View(MediaBucks)
#1 Senior Reporter at Pro Publica
view(Reporters)
view(Salary)
Editors <- subset(MediaBucks, grepl("?editor",TITLE))
summary(Editors$Salary)
View(Editors)
view(Editors)
view(Salary)
Data <- subset(MediaBucks,grepl("?data",TITLE))
summary(Data$Salary)
View(Data)
WSJ_Black <- MediaBucks %>% filter(Race =="black", COMPANY == "WallStreetJournal")
Race <- MediaBucks %>%
select(Race, Salary) %>%
group_by(Race) %>%
summarize(Avg_Salary = mean(Salary, na.rm=TRUE)) %>%
arrange(desc(Avg_Salary))
Race
MediaBucks %>%
count(Race) %>%
arrange(desc(n))
MediaBucks %>%
select(Race, Salary) %>%
group_by(Race) %>%
summarize(Total=n(),
Avg = mean(Salary, na.rm=TRUE)) %>%
arrange(desc(Total))
#details: https://stackoverflow.com/questions/36183601/average-and-count-with-aggregation-in-r-with-dplyr
Race %>%
ggplot(aes(x = Race, y = Avg_Salary, fill = Avg_Salary)) +
geom_col(position = "dodge") +
theme(legend.position = "none") +
labs(title = "Sample chart of race and salary using MediaSalaries",
caption = "1658 records, sample data. Graphic by Rob Wells, 8/11/2022",
y="Average Salary",
x="Race / Ethnicity")
#your answer here
NewYorkTimes <-subset(MediaBucks, COMPANY=="New York Times")
summary(NewYorkTimes$Salary)
#your answer here
NewYorkTimes <-subset(MediaBucks, COMPANY=="NewYorkTimes")
summary(NewYorkTimes$Salary)
#your answer here
NYT <-subset(MediaBucks, COMPANY=="NYT")
summary(NYT$Salary)
#your answer here
NYT <-subset(MediaBucks, COMPANY=="NewYorkTimes")
summary(NYT$Salary)
#your answer here
max(NYT)
#your answer here
max(NYT$Salary)
View(MediaBucks)
#your answer here
max(NYT$Salary)
select(COMPANY,Salary,TITLE,Gender,Race)
#your answer here
max(NYT$Salary)
select(COMPANY,Salary,TITLE,Gender,Race)
#your answer here
max(NYT$Salary)
select(Salary,TITLE,Gender,Race)
#your answer here
NYT <-subset(MediaBucks, COMPANY=="NewYorkTimes")
summary(NYT$Salary)
#your answer here
highest_paid <- max(NYT$Salary)
#your answer here
highest_paid <- max(NYT$Salary)
highest_paid_title <-NYT$Title)
#your answer here
highest_paid <- max(NYT$Salary)
highest_paid_title <-NYT$Title[highest_paid]
View(NewYorkTimes)
#your answer here
highest_paid <- max(NYT$Salary)
highest_paid_title <-NYT$TITLE[highest_paid]
#your answer here
view(NYT)
#your answer here
view(NYT)
max(NYT$Salary)
#your answer here
view(NYT)
max(NYT$Salary)
column_max_salary <-"Salary"
row_max_value <-which.max(NYT[[column_max_salary]])
#your answer here
view(NYT)
max(NYT$Salary)
column_max_salary <-"Salary"
row_max_value <-which.max(NYT[[column_max_salary]])
print(row_max_value)
#your answer here
view(NYT)
max(NYT$Salary)
column_max_salary <-"Salary"
row_max_value <-which.max(NYT[[column_max_salary]])
print(row_max_value)
specific_row <- 28
#your answer here
view(NYT)
max(NYT$Salary)
column_max_salary <-"Salary"
row_max_value <-which.max(NYT[[column_max_salary]])
print(row_max_value)
specific_row <- 28
specific_row_data <-NYT[specific_row]
#your answer here
filter(NYT$Salary=350000)
#your answer here
filter(NYT$Salary==350000)
#your answer here
filter(Salary==350000)
#your answer here
view(Salary)
#your answer here
view(Salary)
#your answer here
library(Salary)
#your answer here
NYT <-subset(MediaBucks, COMPANY=="NewYorkTimes")
summary(NYT$Salary)
NYT <-subset(MediaBucks, COMPANY=="NewYorkTimes")
View(NYT)
#your answer here
highest_paid_row <- which.max(NYT$Salary)
#your answer here
highest_paid_row <- which.max(NYT$Salary)
highest_paid_title <- NYT$Title[highest_paid_row]
#your answer here
highest_paid_row <- which.max(NYT$Salary)
highest_paid_title <- NYT$Title[highest_paid_row]
if (is.na(highest_paid_title)) {
highest_paid_title <- "Title Not Available"
}
#your answer here
highest_paid_row <- which.max(NYT$Salary)
highest_paid_title <- salaries_data$TITLE[highest_paid_row]
#your answer here
highest_paid_row <- which.max(NYT$Salary)
highest_paid_title <- NYT$TITLE[highest_paid_row]
#your answer here
highest_paid_row <- which.max(NYT$Salary)
highest_paid_title <- NYT$TITLE[highest_paid_row]
highest_paid_gender <- NYT$Gender[highest_paid_row]
highest_paid_race <- NYT$Race[highest_paid_row]
#your answer here They are an Executive Editor, News, noanswer for gender, and their race is black
highest_paid_row <- which.max(NYT$Salary)
highest_paid_title <- NYT$TITLE[highest_paid_row]
highest_paid_gender <- NYT$Gender[highest_paid_row]
highest_paid_race <- NYT$Race[highest_paid_row]
cat("Highest Paid Position at NYT:\n")
cat("Title: ", highest_paid_title, "\n")
cat("Gender: ", highest_paid_gender, "\n")
cat("Race: ", highest_paid_race, "\n")
#your answer here
Bloom <- subset(MediaBucks, Company == "Bloomberg")
#your answer here
Bloom <- subset(MediaBucks, COMPANY == "Bloomberg")
View(Bloom)
median(Bloom$Salary)
#your answer here
Bloom <- subset(MediaBucks, COMPANY == "Bloomberg")
View(Bloom)
median(Bloom$Salary)
#your answer here
Bloom <- subset(MediaBucks, COMPANY == "Bloomberg")
View(Bloom)
median(Bloom$Salary)
median(NYT$Salary)
#This is a
#1
summary(MediaBucks$Salary)
#2
nrow(MediaBucks)
#3
nrow(MediaSalary)
#1 Senior Reporter at Pro Publica
view(Reporters)
Reporters %>%
desc(Salary)
options(repos = "https://cloud.r-project.org")
install.packages("tidyverse")
install.packages("rio")
install.packages("janitor")
library(tidyverse)
library(rio)
library(janitor)
View(MediaBucks)
#1 Senior Reporter at Pro Publica
View(Reporters)
View(Salary)
Reporters %>%
desc(Salary)
View(Reporters)
View(Salary)
Reporters %>%
desc("Salary")
View(Reporters)
View(Salary)
Reporters %>%
order(Salary)
View(Reporters)
View(Salary)
Reporters %>%
library(dplyr)
View(Reporters)
View(Salary)
Reporters %>%
library("dplyr")
View(Reporters)
View(Salary)
Reporters %>%
sort<-arrange(data, desc(salary))
Reporters %>%
arrange(data, desc(salary))
print(Reporters)
Salary %>%
arrange(data, desc(salary))
reporters_tibble <- Reporters
reporters_tibble %>%
arrange(data, desc(salary))
reporters_tibble <- Reporters %>%
as_tibble(rownames = "Salary")
reporters_tibble %>%
arrange(data, desc(salary))
summary(Reporters)
as.data.frame(Reporters)
as.data.frame(Reporters) <- report
report <- as.data.frame(Reporters)
report %>%
arrange(data, desc(salary))
Reporters %>%
arrange(desc(salary))
#1 Senior Reporter at Pro Publica
View(Reporters)
View(Salary)
Reporters %>%
arrange(Reporters,desc(salary))
report <- as.tibble(Reporters)
report <- as_tibble(Reporters)
report %>%
arrange(desc(Salary))
Reporters %>%
arrange(Reporters,desc(Salary))
report %>%
arrange(desc(Salary))
report %>%
arrange(desc(Salary))
#1 Senior Reporter at Pro Publica
View(Reporters)
View(Salary)
report <- as_tibble(Reporters)
report %>%
arrange(desc(Salary))
summary(Reporters)
#2
Editors <- subset(MediaBucks, grepl("?editor",TITLE))
summary(Editors$Salary)
#3 The highest paid editor is an editorial director at Conde Nast
view(Editors)
view(Salary)
report %>%
arrange(desc(Salary))
view(Report)
view(report)
View(Reporters)
View(Salary)
report <- as_tibble(Reporters)
report %>%
arrange(desc(Salary))
view(report)
view(Editors)
view(Salary)
NYT <-subset(MediaBucks, COMPANY=="NewYorkTimes")
summary(NYT$Salary)
median(NYT$Salary)
highest_paid_row <- max(NYT$Salary)
#your answer here They are an Executive Editor, News, noanswer for gender, and their race is black
install.packages(dpylr)
#your answer here They are an Executive Editor, News, noanswer for gender, and their race is black
install.packages(dplyr)
#your answer here They are an Executive Editor, News, noanswer for gender, and their race is black
install.packages("dplyr")
library(dplyr)
MediaBucks %>%
filter(COMPANY=="NewYorkTimes") %>%
arrange(desc(Salary))
View(Reporters)
View(Salary)
report <- as_tibble(Reporters)
report %>%
arrange(desc(Salary))
view(report)
